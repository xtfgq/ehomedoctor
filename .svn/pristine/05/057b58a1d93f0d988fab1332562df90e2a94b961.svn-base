package com.zzu.ehome.ehomefordoctor.mvp.model;

import android.text.TextUtils;

import com.zzu.ehome.ehomefordoctor.app.App;
import com.zzu.ehome.ehomefordoctor.app.CommonApi;
import com.zzu.ehome.ehomefordoctor.app.Constans;
import com.zzu.ehome.ehomefordoctor.db.EHomeDao;
import com.zzu.ehome.ehomefordoctor.db.EHomeDaoImpl;
import com.zzu.ehome.ehomefordoctor.entity.ResultBean;
import com.zzu.ehome.ehomefordoctor.entity.UserBean;
import com.zzu.ehome.ehomefordoctor.mvp.listener.ILogin;
import com.zzu.ehome.ehomefordoctor.mvp.listener.OnLoginListener;
import com.zzu.ehome.ehomefordoctor.service.ServiceStore;
import com.zzu.ehome.ehomefordoctor.utils.Node;
import com.zzu.ehome.ehomefordoctor.utils.RequestManager;
import com.zzu.ehome.ehomefordoctor.utils.SharePreferenceUtil;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

import okhttp3.ResponseBody;
import retrofit2.Call;

/**
 * Created by Mersens on 2016/9/18.
 */
public class ILoginImpl implements ILogin {
    public RequestManager manager;
    private EHomeDao dao;
    public ILoginImpl(){
        manager= RequestManager.getInstance();
    }

    @Override
    public void login(final String name, final String psd, final OnLoginListener listener) {
        Map<String,String> map=new HashMap<>();
        map.put("UserMobile",name);
        map.put("Password",psd);
        map.put("PhoneType","0");
        map.put("ClientID","");
        String result= Node.getResult("UserLogin",map);
        final ServiceStore service= manager.create(ServiceStore.class);
        Call<ResponseBody> call=service.login(result);
        dao = new EHomeDaoImpl(App.getInstance());
        manager.execute(call, new RequestManager.RequestCallBack() {
            @Override
            public void onSueecss(String msg) {
                try {
                    UserBean userBean=new UserBean();
                    ResultBean resultBean=new ResultBean();
                    JSONObject mySO = new JSONObject(msg);
                    org.json.JSONArray array = mySO
                            .getJSONArray("UserLogin");
                    if(array.getJSONObject(0).has("MessageCode")){
                        resultBean.setMessageCode(array.getJSONObject(0).getString("MessageCode").toString());
                        resultBean.setMessageContent(array.getJSONObject(0).getString("MessageContent").toString());
                        userBean.setResultBean(resultBean);
                    }else{
                        userBean.setResultBean(null);
                        userBean.setUserid(array.getJSONObject(0).getString("UserID").toString());
                        userBean.setMobile(array.getJSONObject(0).getString("Mobile").toString());
                        userBean.setNick(array.getJSONObject(0).getString("NickName").toString());
                        userBean.setUsername(array.getJSONObject(0).getString("RealName").toString());
                        userBean.setUserno(array.getJSONObject(0).getString("UserNO").toString());
                        String headUrl=array.getJSONObject(0).getString("PictureURL").toString();
                        if(TextUtils.isEmpty(headUrl) || headUrl.contains("vine.gif")){
                            userBean.setImgHead("");
                        }else{
                            userBean.setImgHead(Constans.JE_BASE_URL3 + headUrl.replace("~", "").replace("\\", "/"));
                        }
                        userBean.setSex(array.getJSONObject(0).getString("UserSex").toString());
                        userBean.setAge(array.getJSONObject(0).getString("UserAge").toString());
                        userBean.setPatientId(array.getJSONObject(0).getString("Patient_Id").toString());
                        dao.addUserInfo(userBean);
                        SharePreferenceUtil.getInstance(App.getInstance()).setUserId(array.getJSONObject(0).getString("UserID"));
                    }
                    listener.onSuccess(userBean);

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onError(String msg) {
                listener.onError(new Exception(msg));

            }

            @Override
            public void onStart() {
                listener.onStart();

            }

            @Override
            public void onFinish() {
                listener.onFinish();

            }
        });



    }

}
